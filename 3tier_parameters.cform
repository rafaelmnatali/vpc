{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description": "This template defines the network parameters for a new 3 tier VPC with 2 public, private, and database private subnets", 
  "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VPCCIDR",
                        "PrivateSubnet1",
                        "PrivateSubnet2",
                        "PublicSubnet1",
                        "PublicSubnet2",
                        "DBSubnetGroup1",
                        "DBSubnetGroup2"                        
                    ]
                }
            ],
            "ParameterLabels": {
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "PrivateSubnet1":{
                    "default": "Private Subnet 1 CIDR"
                },
                "PrivateSubnet2":{
                    "default": "Private Subnet 2 CIDR"
                },
                "PublicSubnet1":{
                    "default": "Public Subnet 1 CIDR"
                },
                "PublicSubnet2":{
                    "default": "Public Subnet 2 CIDR"
                },
                "DBSubnetGroup1":{
                    "default": "Database Subnet 1 CIDR"
                },
                "DBSubnetGroup2":{
                    "default": "Database Subnet 2 CIDR"
                },                     
            }
        }
    },
    "Parameters": {
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved and only 2 AZs are used for this deployment.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "PrivateSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/19",
            "Description": "CIDR block for private subnet 1 located in Availability Zone 1.",
            "Type": "String"
        },
        "PrivateSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.32.0/19",
            "Description": "CIDR block for private subnet 2 located in Availability Zone 2.",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20",
            "Description": "CIDR block for public subnet 1 located in Availability Zone 1.",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.144.0/20",
            "Description": "CIDR block for public subnet 2 located in Availability Zone 2.",
            "Type": "String"
        },
        "DBSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.192.0/21",
            "Description": "CIDR block for database subnet 1 located in Availability Zone 1.",
            "Type": "String"
        },
        "DBSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.200.0/21",
            "Description": "CIDR block for database subnet 2 located in Availability Zone 2.",
            "Type": "String"
        },                       
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR Block for the VPC",
            "Type": "String"
        }
    },
  "Resources": {

    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Ref" : "VPCCIDR" },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : { "Ref" : "AWS::StackName"}}]
      }
    },

    "PrivateSubnet1": {
         "Type": "AWS::EC2::Subnet",
         "Properties": {
           "AvailabilityZone" : { "Fn::Select" : [ "0", { "Ref" : "AvailabilityZones"}]}, 
           "VpcId": { "Ref" : "VPC" },
           "CidrBlock": { "Ref" : "PrivateSubnet1CIDR"},
           "Tags": [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : "Private"}]
         },
         "DependsOn" : "VPC"
       },

    "PrivateSubnet2": {
         "Type": "AWS::EC2::Subnet",
         "Properties": {
           "AvailabilityZone" : { "Fn::Select" : [ "1", { "Ref" : "AvailabilityZones"}]},
           "VpcId": { "Ref" : "VPC" },
           "CidrBlock": { "Ref" : "PrivateSubnet2CIDR"},
           "Tags": [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : "Private"}]
         },
         "DependsOn" : "VPC"
       },

    "PublicSubnet1": {
         "Type": "AWS::EC2::Subnet",
         "Properties": {
           "AvailabilityZone" : { "Fn::Select" : [ "0", { "Ref" : "AvailabilityZones"}]},
           "VpcId": { "Ref" : "VPC" },
           "CidrBlock": { "Ref" : "PublicSubnet1CIDR"},
           "Tags": [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : "Public"}]
         },
         "DependsOn" : "VPC"
       },

    "PublicSubnet2": {
         "Type": "AWS::EC2::Subnet",
         "Properties": {
           "AvailabilityZone" : { "Fn::Select" : [ "1", { "Ref" : "AvailabilityZones"}]},
           "VpcId": { "Ref" : "VPC" },
           "CidrBlock": { "Ref" : "PublicSubnet2CIDR"},
           "Tags": [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : "Public"}]
         },
         "DependsOn" : "VPC"
       },

    "DBSubnet1": {
         "Type": "AWS::EC2::Subnet",
         "Properties": {
           "AvailabilityZone" : { "Fn::Select" : [ "0", { "Ref" : "AvailabilityZones"}]},
           "VpcId": { "Ref" : "VPC" },
           "CidrBlock": { "Ref" : "DBSubnet1CIDR"},
           "Tags": [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : "Database"}]
         },
         "DependsOn" : "VPC"
       },

    "DBSubnet2": {
         "Type": "AWS::EC2::Subnet",
         "Properties": {
           "AvailabilityZone" : { "Fn::Select" : [ "1", { "Ref" : "AvailabilityZones"}]},
           "VpcId": { "Ref" : "VPC" },
           "CidrBlock": { "Ref" : "DBSubnet2CIDR"},
           "Tags": [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : "Database"}]
         },
         "DependsOn" : "VPC"
       },
    
    "RDSDBSubnetGroup": {
         "Type" : "AWS::RDS::DBSubnetGroup",
         "Properties" : {
               "DBSubnetGroupDescription" : "Create DBSubnetGroup for RDS",
               "DBSubnetGroupName" : "RDSDBSubnet",
               "SubnetIds" : [ {"Ref" : "DBSubnet1" }, {"Ref" : "DBSubnet2" }],
               "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : "RDSDBSubnetGroup"}]
         }    
    },

    "publicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : { "Ref" : "AWS::StackName"}}]
      }
    },

    "IGW": {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {
          "Tags": [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : { "Ref" : "AWS::StackName"}}]
      }
    },

    "AttachGateway": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "VpcId": { "Ref" : "VPC" },
          "InternetGatewayId": { "Ref": "IGW" }
      }
    },

    "IGWRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "publicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "IGW" }
      }
    },

    "SubnetRouteTableAssociationPublic1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1" },
        "RouteTableId" : { "Ref" : "publicRouteTable" }
      }
    },

    "SubnetRouteTableAssociationPublic2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet2" },
        "RouteTableId" : { "Ref" : "publicRouteTable" }
      }
    },

    "DBSubnetNACL" : {
         "Type" : "AWS::EC2::NetworkAcl",
         "Properties" : {
            "VpcId" : { "Ref" : "VPC" },
            "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : "DBSubnetNACL"}]
         }
      },

    "DBSubnetNACLAssociation1" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DBSubnet1" },
        "NetworkAclId" : { "Ref" : "DBSubnetNACL"}
      }
    },

    "DBSubnetNACLAssociation2" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DBSubnet2" },
        "NetworkAclId" : { "Ref" : "DBSubnetNACL"}
      }
    },

    "DBSubnetNACLDBSubnet1" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "DBSubnetNACL"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "PortRange" : { "From" : "3306", "To" : "3306" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet1CIDR"}
      }
    },

    "DBSubnetNACLDBSubnet1egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "DBSubnetNACL"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "PortRange" : { "From" : "3306", "To" : "3306" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet1CIDR"}
      }
    },

    "DBSubnetNACLDBSubnet2" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "DBSubnetNACL"},
        "RuleNumber" : "200",
        "Protocol" : "6",
        "PortRange" : { "From" : "3306", "To" : "3306" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet2CIDR"}
      }
    },

    "DBSubnetNACLDBSubnet2egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "DBSubnetNACL"},
        "RuleNumber" : "200",
        "Protocol" : "6",
        "PortRange" : { "From" : "3306", "To" : "3306" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet2CIDR"}
      }
    },

    "PrivateSubnetNACL" : {
         "Type" : "AWS::EC2::NetworkAcl",
         "Properties" : {
            "VpcId" : { "Ref" : "VPC" },
            "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : "PrivateSubnetNACL"}]
         }
      },

    "PrivateSubnetNACLAssociation1" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet1" },
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"}
      }
    },

    "PrivateSubnetNACLAssociation2" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet2" },
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"}
      }
    },

    "PrivateSubnetNACLDBSubnet1" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "PortRange" : { "From" : "3306", "To" : "3306" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "DBSubnet1CIDR"}
      }
    },

    "PrivateSubnetNACLDBSubnet1egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "PortRange" : { "From" : "3306", "To" : "3306" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "DBSubnet1CIDR"}
      }
    },

    "PrivateSubnetNACLDBSubnet2" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "200",
        "Protocol" : "6",
        "PortRange" : { "From" : "3306", "To" : "3306" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "DBSubnet2CIDR"}
      }
    },

    "PrivateSubnetNACLDBSubnet2egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "200",
        "Protocol" : "6",
        "PortRange" : { "From" : "3306", "To" : "3306" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "DBSubnet2CIDR"}
      }
    },

    "PrivateSubnetNACLPublicSubnet180" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "300",
        "Protocol" : "6",
        "PortRange" : { "From" : "80", "To" : "80" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet1CIDR"}
      }
    },

    "PrivateSubnetNACLPublicSubnet180egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "300",
        "Protocol" : "6",
        "PortRange" : { "From" : "80", "To" : "80" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet1CIDR"}
      }
    },

    "PrivateSubnetNACLPublicSubnet122" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "400",
        "Protocol" : "6",
        "PortRange" : { "From" : "22", "To" : "22" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet1CIDR"}
      }
    },

    "PrivateSubnetNACLPrivateSubnet122egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "400",
        "Protocol" : "6",
        "PortRange" : { "From" : "22", "To" : "22" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet1CIDR"}
      }
    },

    "PrivateSubnetNACLPublicSubnet1389" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "500",
        "Protocol" : "6",
        "PortRange" : { "From" : "389", "To" : "389" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet1CIDR"}
      }
    },

    "PrivateSubnetNACLPublicSubnet1389egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "500",
        "Protocol" : "6",
        "PortRange" : { "From" : "389", "To" : "389" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet1CIDR"}
      }
    },

    "PrivateSubnetNACLPublicSubnet1443" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "600",
        "Protocol" : "6",
        "PortRange" : { "From" : "443", "To" : "443" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet1CIDR"}
      }
    },

    "PrivateSubnetNACLPrivateSubnet1443egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "600",
        "Protocol" : "6",
        "PortRange" : { "From" : "443", "To" : "443" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet1CIDR"}
      }
    },

    "PrivateSubnetNACLPublicSubnet280" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "700",
        "Protocol" : "6",
        "PortRange" : { "From" : "80", "To" : "80" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet2CIDR"}
      }
    },

    "PrivateSubnetNACLPublicSubnet280egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "700",
        "Protocol" : "6",
        "PortRange" : { "From" : "80", "To" : "80" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet2CIDR"}
      }
    },

    "PrivateSubnetNACLPublicSubnet2443" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "800",
        "Protocol" : "6",
        "PortRange" : { "From" : "443", "To" : "443" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet2CIDR"}
      }
    },

    "PrivateSubnetNACLPublicSubnet2443egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "800",
        "Protocol" : "6",
        "PortRange" : { "From" : "443", "To" : "443" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet2CIDR"}
      }
    },

    "PrivateSubnetNACLPublicSubnet2389" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "900",
        "Protocol" : "6",
        "PortRange" : { "From" : "389", "To" : "389" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet2CIDR"}
      }
    },

    "PrivateSubnetNACLPublicSubnet2389egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "900",
        "Protocol" : "6",
        "PortRange" : { "From" : "389", "To" : "389" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet2CIDR"}
      }
    },

    "PrivateSubnetNACLPublicSubnet222" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "1000",
        "Protocol" : "6",
        "PortRange" : { "From" : "22", "To" : "22" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet2CIDR"}
      }
    },

    "PrivateSubnetNACLPublicSubnet222egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PrivateSubnetNACL"},
        "RuleNumber" : "1000",
        "Protocol" : "6",
        "PortRange" : { "From" : "22", "To" : "22" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PublicSubnet2CIDR"}
      }
    },

    "PublicSubnetNACL" : {
         "Type" : "AWS::EC2::NetworkAcl",
         "Properties" : {
            "VpcId" : { "Ref" : "VPC" },
            "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : "PublicSubnetNACL"}]
         }
      },

    "PublicSubnetNACLAssociation1" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet1" },
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"}
      }
    },

    "PublicSubnetNACLAssociation2" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet2" },
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"}
      }
    },

    "PublicSubnetNACLPrivateSubnet180" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "PortRange" : { "From" : "80", "To" : "80" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet1CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet180egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "PortRange" : { "From" : "80", "To" : "80" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet1CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet1443" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "200",
        "Protocol" : "6",
        "PortRange" : { "From" : "443", "To" : "443" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet1CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet1443egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "200",
        "Protocol" : "6",
        "PortRange" : { "From" : "443", "To" : "443" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet1CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet122" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "300",
        "Protocol" : "6",
        "PortRange" : { "From" : "22", "To" : "22" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet1CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet122egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "300",
        "Protocol" : "6",
        "PortRange" : { "From" : "22", "To" : "22" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet1CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet1389" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "400",
        "Protocol" : "6",
        "PortRange" : { "From" : "389", "To" : "389" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet1CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet1389egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "400",
        "Protocol" : "6",
        "PortRange" : { "From" : "389", "To" : "389" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet1CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet280" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "500",
        "Protocol" : "6",
        "PortRange" : { "From" : "80", "To" : "80" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet2CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet280egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "500",
        "Protocol" : "6",
        "PortRange" : { "From" : "80", "To" : "80" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet2CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet2443" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "600",
        "Protocol" : "6",
        "PortRange" : { "From" : "443", "To" : "443" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet2CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet2443egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "600",
        "Protocol" : "6",
        "PortRange" : { "From" : "443", "To" : "443" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet2CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet222" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "700",
        "Protocol" : "6",
        "PortRange" : { "From" : "22", "To" : "22" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet2CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet222egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "700",
        "Protocol" : "6",
        "PortRange" : { "From" : "22", "To" : "22" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet2CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet2389" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "800",
        "Protocol" : "6",
        "PortRange" : { "From" : "389", "To" : "389" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet2CIDR"}
      }
    },

    "PublicSubnetNACLPrivateSubnet2389egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "800",
        "Protocol" : "6",
        "PortRange" : { "From" : "389", "To" : "389" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : { "Ref" : "PrivateSubnet2CIDR"}
      }
    },

    "PublicSubnetNACLPublicAccess80" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "900",
        "Protocol" : "6",
        "PortRange" : { "From" : "80", "To" : "80" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : "0.0.0.0/0"
      }
    },

    "PublicSubnetNACLPublicAccess80egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "900",
        "Protocol" : "6",
        "PortRange" : { "From" : "80", "To" : "80" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : "0.0.0.0/0"
      }
    },

    "PublicSubnetNACLPublicAccess443" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "1000",
        "Protocol" : "6",
        "PortRange" : { "From" : "443", "To" : "443" },
        "Egress" : "false",
        "RuleAction" : "allow",
        "CidrBlock" : "0.0.0.0/0"
      }
    },

    "PublicSubnetNACLPublicAccess443egress" : { 
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId" : { "Ref" : "PublicSubnetNACL"},
        "RuleNumber" : "1000",
        "Protocol" : "6",
        "PortRange" : { "From" : "443", "To" : "443" },
        "Egress" : "true",
        "RuleAction" : "allow",
        "CidrBlock" : "0.0.0.0/0"
      }
    },

  }                
}   